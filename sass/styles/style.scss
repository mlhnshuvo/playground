// main features of scss
// variables
// nesting css rules
// import and partials
// @mixin and @includs
// extend and inheritance
// @if @else if @else
// @for
// @while
// @each

// css to sass transpiler/pre-processor




// improt syntex
// @import "reset"; // eta ager version
@forward "reset";
// @use "./utils//partials";
@use "./utils//partials" as variables;
header{
  // background-color: partials.$myColor
  background-color: variables.$myColor
}



// variables
// $bgcolor: rgb(11, 31, 37);
// $textcolor: darkblue;
// $fontsize: 18px;
// body {
//   background-color: $bgcolor;
//   color: $textcolor;
//   font-size: $fontsize;
// }




// if, else if, else
// @mixin setFontSize($value) {
//   @if ($value == small) {
//     font-size: 12px;
//   } @else if ($value == medium) {
//     font-size: 16px;
//   } @else {
//     font-size: 20px;
//   }
// }


// nesting
// nav {
//   margin-top: 15px;
//   ul {
//     list-style-type: none;
//     li {
//       display: inline-block;
//       margin: 0 15px;
//       a {
//         display: inline-block;
//         text-decoration: none;
//         padding: 10px;
//         transition: 0.5s;
//         border-radius: 5px;
//         @include setFontSize(medium);
//       }
//       a:hover {
//         background: #000;
//       }
//     }
//   }
// }



// mixin and includs
// @mixin para-style {
//   width:80%;
//   font-size: 20px;
//   text-align: justify;
// }

// #section2 p{
//   @include para-style;
//   margin: 0 auto;
// }

// @mixin para-style($size, $style) {
//   width: 80%;
//   font-size: $size;
//   text-align: $style;
// }

// #section2 p {
//   @include para-style(20px, justify);
//   margin: 0 auto;
// }




// extend and inheritance
// .btn{
//   border:none;
//   padding: 15px 30px;
//   text-emphasis: center;
//   font-size: 16px;
//   cursor: pointer;
// }
// .btnClass {
//   @extend .btn
// }




// loop in sass @for, @while
// sass start
// @for $i from 1 through 12 { // jodi through er poriborte to use kori tahole 12 porjonto jabe na
//   .col-#{$i} {
//     width: 100% / 12 * $i;
//   }
// }

// $i: 1;
// @while $i < 13 {
//   .col-#{$i} {
//     width: 100% / 12 * $i;
//   }
//   $i: $i + 1;
// }
// sass end

// css start
// .col-1 {
//   width: 8.33%;
// }
// .col-2 {
//   width: 16.66%;
// }
// .col-3 {
//   width: 25%;
// }
// .col-4 {
//   width: 33.33%;
// }
// .col-5 {
//   width: 41.66%;
// }
// .col-6 {
//   width: 50%;
// }
// .col-7 {
//   width: 58.33%;
// }
// .col-8 {
//   width: 66.66%;
// }
// .col-9 {
//   width: 75%;
// }
// .col-10 {
//   width: 83.33%;
// }
// .col-11 {
//   width: 91.66%;
// }
// .col-12 {
//   width: 100%;
// }

// [class*="col-"] {
//   float: left;
// }
// .row::after {
//   clear: both;
//   content: "";
//   display: table;
// }
// css end



// map over items using @each
// @each $color in red, green, blue, black {
//   .#{$color}-text {
//     color: $color;
//   }
// }

$colors: (color1: red, color2: green, color3: black);
@each $key, $color in $colors {
  .#{$color}-text {
    color: $color;
  }
}